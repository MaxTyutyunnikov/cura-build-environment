# -------------------------------
# Stage 1: Build cura-build-environment
#
FROM ubuntu:16.04

LABEL linux_distro="ubuntu_16.04" \
      architecture="amd64" \
      python_version="3.5.7" \
      qt_version="5.12.6"

# Set build time arugments

ARG X11VNC_PASSWORD=123456
ARG CURA_BUILD_ENV_BUILD_TYPE=Release
ARG CURA_BUILD_ENV_PATH=/srv/cura-build-environment
ARG CURA_BUILD_ENV_WORK_DIR=/tmp/cura-build-environment
ARG CURA_ARCUS_BRANCH_OR_TAG=4.4
ARG CURA_SAVITAR_BRANCH_OR_TAG=3.6
#ARG CURA_SAVITAR_BRANCH_OR_TAG=master

# Create unprivileged user
RUN groupadd -g 1000 ultimaker && \
    useradd -g ultimaker -u 1000 ultimaker -m

RUN apt -y update && \
    apt -y dist-upgrade

# Install package repositories
RUN apt -y update && \
    apt install -y  x11vnc \
                    curl \
                    git \
                    libtool \
                    make \
                    software-properties-common \
                    patchelf \
                    xterm \
                    gfortran python3-sip-dev python-sip-dev freetype2-demos ^libfreetype6.* "^libxcb.*" libx11-xcb-dev \
                    libglu1-mesa-dev libxcb-xkb-dev "^libxcb.*" libx11-xcb-dev libglu1-mesa-dev libxrender-dev \
                    libfbclient2 libodbc1 libpq5 libsybdb5 libgles2-mesa-dev libxext-dev libinput-dev libxkbcommon-dev libfontconfig1-dev \
                    libfontconfig-dev libxcb-xinerama0-dev '^libxcb.*-dev' libx11-xcb-dev libglu1-mesa-dev libxrender-dev libxi-dev \
                    flex bison gperf libicu-dev libxslt-dev ruby libssl-dev libxcursor-dev libxcomposite-dev libxdamage-dev \
                    libxrandr-dev libdbus-1-dev libfontconfig1-dev libcap-dev libxtst-dev libpulse-dev libudev-dev libpci-dev \
                    libasound2-dev libxss-dev libegl1-mesa-dev gperf bison "^libxcb1.*" libffi-dev \
                    python3-sip-dev python-sip-dev patchelf python3-sip python-sip python-pyqt5 python3-pyqt5 \
                    python-enum34 curl

RUN curl --silent --show-error --retry 5 https://bootstrap.pypa.io/get-pip.py | python3
RUN curl --silent --show-error --retry 5 https://bootstrap.pypa.io/get-pip.py | python2

#RUN pip install PyQt5==5.13.2 PyQt5-sip sip enum34
RUN pip3 install PyQt5==5.13.2 PyQt5-sip sip enum34

RUN add-apt-repository -y ppa:ppsspp/cmake && \
    apt -y update && \
    apt install -y cmake sudo patchelf

#                    tigervnc-server \
#                    cmake3 \
#                    file \
#                    tar \
#                    which \
#                    bzip2 \
#                    bzip2-dev \
#                    freetype \
#                    freetype-dev \
#                    fontconfig \
#                    fontconfig-dev \
#                    patch \
#                    mesa-libGL \
#                    mesa-libGL-dev \
#                    xorg-x11-server-Xvfb \
#                    libX11-dev \
#                    xdotool \

# Init xstartup
ADD ./xstartup /
RUN mkdir -p /.vnc && \
    x11vnc -storepasswd "${X11VNC_PASSWORD}" /.vnc/passwd && \
    cp -f ./xstartup /.vnc/ && \
    chmod a+x /.vnc/xstartup

# Note: make sure to run the following lines before your UI application:
#   Xvfb :1 -screen 0 1600x1200x16 &
#   export DISPLAY=:1.0

# Set up the build environment
RUN mkdir -p "${CURA_BUILD_ENV_WORK_DIR}" "${CURA_BUILD_ENV_PATH}"
ADD . "${CURA_BUILD_ENV_WORK_DIR}"/src

# Build the build environment
RUN mkdir -p "${CURA_BUILD_ENV_WORK_DIR}"/build && \
    chown -R ultimaker:ultimaker "${CURA_BUILD_ENV_WORK_DIR}" && \
    chown -R ultimaker:ultimaker "${CURA_BUILD_ENV_PATH}"
WORKDIR "${CURA_BUILD_ENV_WORK_DIR}"/build
USER ultimaker

RUN "${CURA_BUILD_ENV_WORK_DIR}"/src/docker/linux/build_ubuntu.sh "${CURA_BUILD_ENV_WORK_DIR}"/src

# -------------------------------
# Stage 2: Create a cleaner image with cura-build-environment installed
#
FROM ubuntu:16.04

LABEL linux_distro="ubuntu_16.04" \
      architecture="amd64" \
      python_version="3.5.7" \
      qt_version="5.12.6"

# Set build time arguments
ARG X11VNC_PASSWORD=123456
ARG CURA_BUILD_ENV_BUILD_TYPE=Release
ARG CURA_BUILD_ENV_PATH=/srv/cura-build-environment
ARG CURA_ARCUS_BRANCH_OR_TAG=4.4
ARG CURA_SAVITAR_BRANCH_OR_TAG=master

# Set environment variables
ENV CURA_BUILD_ENV_BUILD_TYPE="${CURA_BUILD_ENV_BUILD_TYPE}" \
    CURA_BUILD_ENV_PATH="${CURA_BUILD_ENV_PATH}" \
    CURA_ARCUS_BRANCH_OR_TAG="${CURA_ARCUS_BRANCH_OR_TAG}" \
    CURA_SAVITAR_BRANCH_OR_TAG="${CURA_SAVITAR_BRANCH_OR_TAG}"

# Create unprivileged user
RUN groupadd -g 1000 ultimaker && \
    useradd -g ultimaker -u 1000 ultimaker

# Install package repositories
RUN apt -y update && \
    apt install -y  x11vnc \
                    curl \
                    git \
                    libtool \
                    make \
                    software-properties-common \
                    patchelf \
                    xterm \
                    gfortran python3-sip-dev python-sip-dev freetype2-demos ^libfreetype6.* "^libxcb.*" libx11-xcb-dev \
                    libglu1-mesa-dev libxcb-xkb-dev "^libxcb.*" libx11-xcb-dev libglu1-mesa-dev libxrender-dev \
                    libfbclient2 libodbc1 libpq5 libsybdb5 libgles2-mesa-dev libxext-dev libinput-dev libxkbcommon-dev libfontconfig1-dev \
                    libfontconfig-dev libxcb-xinerama0-dev '^libxcb.*-dev' libx11-xcb-dev libglu1-mesa-dev libxrender-dev libxi-dev \
                    flex bison gperf libicu-dev libxslt-dev ruby libssl-dev libxcursor-dev libxcomposite-dev libxdamage-dev \
                    libxrandr-dev libdbus-1-dev libfontconfig1-dev libcap-dev libxtst-dev libpulse-dev libudev-dev libpci-dev \
                    libasound2-dev libxss-dev libegl1-mesa-dev gperf bison "^libxcb1.*" libffi-dev \
                    python3-sip-dev python-sip-dev patchelf python3-sip python-sip python-pyqt5 python3-pyqt5 \
                    python-enum34

RUN curl --silent --show-error --retry 5 https://bootstrap.pypa.io/get-pip.py | python3
RUN curl --silent --show-error --retry 5 https://bootstrap.pypa.io/get-pip.py | python2

#RUN pip install PyQt5==5.13.2 PyQt5-sip sip enum34
RUN pip3 install PyQt5==5.13.2 PyQt5-sip sip enum34

RUN add-apt-repository -y ppa:ppsspp/cmake && \
    apt -y update && \
    apt install -y cmake sudo patchelf

#                    cmake3 \
#                    curl \
#                    git \
#                    libtool \
#                    make \
#                    file \
#                    tar \
#                    which \
#                    bzip2 \
#                    bzip2-dev \
#                    freetype \
#                    freetype-dev \
#                    fontconfig \
#                    fontconfig-dev \
#                    patch \
#                    mesa-libGL \
#                    mesa-libGL-dev \
#                    xorg-x11-server-Xvfb \
#                    libX11-dev \
#                    xdotool \
#                    tigervnc-server \
#                    x11vnc \
#                    xterm

# Init xstartup
ADD ./xstartup /
RUN mkdir -p /.vnc && \
    x11vnc -storepasswd "${X11VNC_PASSWORD}" /.vnc/passwd && \
    cp -f ./xstartup /.vnc/ && \
    chmod a+x /.vnc/xstartup

# Note: make sure to run the following lines before your UI application:
#   Xvfb :1 -screen 0 1600x1200x16 &
#   export DISPLAY=:1.0

# Copy cura-build-environment here
COPY --from=0 "${CURA_BUILD_ENV_PATH}" "${CURA_BUILD_ENV_PATH}"


# Cleanup
RUN rm -rf /tmp/* && \
    rm -rf /var/cache

ADD ./docker/linux/entrypoint_ubuntu.sh /docker-entrypoint.sh

#RUN echo -e "root\nroot" | passwd root
#RUN echo -e "1234\n1234" | passwd ultimaker
RUN echo "root:root" | chpasswd
RUN echo "ultimaker:1234" | chpasswd

# Change working directory and set user
WORKDIR /home/ultimaker
USER ultimaker

ENTRYPOINT ["/docker-entrypoint.sh"]
